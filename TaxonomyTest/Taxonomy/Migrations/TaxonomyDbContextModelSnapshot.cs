// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taxonomy.DbModels;

#nullable disable

namespace Taxonomy.Migrations
{
    [DbContext(typeof(TaxonomyDbContext))]
    partial class TaxonomyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Taxonomy.DbModels.EmployeeNode", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<uint>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ManagerIdentifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Identifier");

                    b.HasIndex("ManagerIdentifier");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("EmployeeNode");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Taxonomy.DbModels.CEONode", b =>
                {
                    b.HasBaseType("Taxonomy.DbModels.EmployeeNode");

                    b.HasDiscriminator().HasValue("CEONode");
                });

            modelBuilder.Entity("Taxonomy.DbModels.DeveloperNode", b =>
                {
                    b.HasBaseType("Taxonomy.DbModels.EmployeeNode");

                    b.Property<string>("ProgrammingLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("DeveloperNode");
                });

            modelBuilder.Entity("Taxonomy.DbModels.ManagerNode", b =>
                {
                    b.HasBaseType("Taxonomy.DbModels.EmployeeNode");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ManagerNode");
                });

            modelBuilder.Entity("Taxonomy.DbModels.EmployeeNode", b =>
                {
                    b.HasOne("Taxonomy.DbModels.EmployeeNode", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerIdentifier");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Taxonomy.DbModels.EmployeeNode", b =>
                {
                    b.Navigation("Subordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
